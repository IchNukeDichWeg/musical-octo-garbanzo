
function Main()
menu = gg.multiChoice({
    '💎: Max Cores 1 (Sixth Sense)',
    '💎: Max Cores 2 (Improved Berserker, Undying, Seer)',
    '💎: Max Cores 3 (Evil Eye)',
    '💎: Max Cores 4 (Hair Trigger)',
    '🎯: Enable Headshot Aimbot',
    '🤖: Player Functions',
    '🔫: Gun Functions',
	'❌: Exit the Script'
},nil,'Modern Combat 5 Script')

if menu == nil then else
if menu[1] == true then CoreHack("37.0;38.0;39.0;40.0;41.0:97", "Core Hack 1 (Sixth Sense)", "420454") end -- value to display + 34.375 = value to input
if menu[2] == true then CoreHack("36.0;37.0;38.0;39.0;40.0:97", "Core Hack 2 (Improved Berserker, Undying, Seer)", "420454") end -- value + 34.375
if menu[3] == true then CoreHack2("36.0;36.5;37.0;37.5;38.0:97", "74.0;69.0;64.0;59.0;54.0:97", "Core Hack 3 (Evil Eye)", "420454", "454") end -- value + 34.375
if menu[4] == true then CoreHack("36.0;38.0;40.0;42.0;44.0:97", "Core Hack 4 (Hair Trigger)", "84") end
if menu[5] == true then Aimbot() end
if menu[6] == true then PlayerFunctions() end
if menu[7] == true then GunFunctions() end
if menu[8] == true then Exit() end
XGCK=-1
end
end

function GunFunctions()
menu1 = gg.multiChoice({
    '⚔️: Grinder',
    '🔇: Whisperer',
    '🎯: Vice',
    '🔵: Verr Power',
    '💨: LSN 2SB',
    'Maelstrom',
    'Spec 38A',
    '👣: RCF 08',
    '💰 : VLI 35',
	'🔙: Back'
},nil,'Modern Combat 5 Script')

if menu1 == nil then else
if menu1[1] == true then Grinder() end
if menu1[2] == true then Whisperer() end
if menu1[3] == true then Vice() end
if menu1[4] == true then VerrPower() end
if menu1[5] == true then LSN2SB() end
if menu1[6] == true then Maelstrom() end
if menu1[7] == true then Spec38A() end
if menu1[8] == true then RCF08() end
if menu1[9] == true then VLI35() end
if menu1[10] == true then HOME() end
GLWW=-1
end
end

function PlayerFunctions()
menu2 = gg.multiChoice({
    '⚡️: Speed',
    '🎯: Wallshoot (Verr Power)',
    '👀: FOV',
    '⬇️: Underground',
    '🔙: Back'
},nil,'Modern Combat 5 Script')

if menu2 == nil then else
if menu2[1] == true then Speed() end
if menu2[2] == true then Wallshoot() end
if menu2[3] == true then FOV() end
if menu2[4] == true then Underground() end
if menu2[5] == true then HOME() end
XGCK=-1
end
end

gg.setRanges(gg.REGION_C_ALLOC)

function Aimbot()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber("0.00499999989F;0.18000000715F;0.03999999911F", gg.TYPE_FLOAT) 
    gg.getResults(99999)
    gg.searchNumber("0.005F", gg.TYPE_FLOAT) 
    gg.getResults(99999)
    gg.editAll("9999.7", gg.TYPE_FLOAT)
    gg.clearResults()
    gg.toast('Aimbot ✅')
end

function CoreHack(core_range, name, value)
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber(core_range, gg.TYPE_FLOAT)
    revert = gg.getResults(100000)
    local t = gg.getResults(100000)
    for i, v in ipairs(t) do
        if v.flags == gg.TYPE_FLOAT then
            v.value = value
            v.name = name
            v.freeze = true
        end
    end
    gg.addListItems(t)
    t = nil
    gg.clearResults()
    gg.toast(name .. ' ✅')
end

function CoreHack2(core_range1, core_range2, name, value1, value2)
    CoreHack(core_range1, "50% " .. name, value1)
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber(core_range2, gg.TYPE_FLOAT)
    revert = gg.getResults(100000)
    local t = gg.getResults(100000)
    for i, v in ipairs(t) do
        if v.flags == gg.TYPE_FLOAT then
            v.value = value2
            v.freeze = true
            v.name = name
        end
    end
    gg.addListItems(t)
    t = nil
    gg.clearResults()
    gg.toast(name .. ' ✅')
end

function Speed()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber("11.0;6.0;16.0;12.0;25.0;12.0:33", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    revert = gg.getResults(5000, nil, nil, nil, nil, nil, nil, nil, nil)
    gg.editAll("25", gg.TYPE_FLOAT)
    gg.clearResults()
    gg.toast('Speed ✅')
end 

function FOV()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber("0.11~0.111", gg.TYPE_DOUBLE)
    gg.getResults(99999)
    gg.editAll("2.75", gg.TYPE_DOUBLE)
    gg.clearResults()
    gg.toast('FOV ✅')
end

function Wallshoot()
    gg.setRanges(gg.REGION_CODE_APP)
    gg.searchNumber("-0.0001", gg.TYPE_FLOAT)
    gg.getResults(10)
    gg.editAll("999", gg.TYPE_FLOAT)
    gg.clearResults()
    gg.toast('Wallshoot ✅')
end

function Underground()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber("15.76", gg.TYPE_FLOAT)
    gg.getResults(99999)
    gg.editAll("1.5", gg.TYPE_FLOAT)
    gg.clearResults()
    gg.searchNumber("0.30000001192F;1.59999847412F;1.20000004768F;4.2038954e-42F:21", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.refineNumber("1.59999847412", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
    gg.getResults(999, nil, nil, nil, nil, nil, nil, nil, nil)
    gg.clearResults()
    gg.toast('Underground ✅')
end

function VerrPower()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber("66.0;42.0;47.0;39.0;37.0;36.0:21", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    gg.refineNumber("39", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    revert = gg.getResults(5000, nil, nil, nil, nil, nil, nil, nil, nil)
    gg.editAll("1000", gg.TYPE_FLOAT)
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber("1.0F;1.4012985e-45F;0.30000001192F;10.0F;0.5F:149", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    gg.refineNumber("1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    gg.getResults(100000)
    gg.editAll("999999", gg.TYPE_FLOAT)
    gg.clearResults()
    gg.toast('Verr Power ✅')
end

function Grinder()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber("35.0;69.0;42.0;34.0;37.0;55.0;36.0:37", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    gg.refineNumber("35;42", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    revert = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
    local t = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
    for i, v in ipairs(t) do
        if v.flags == gg.TYPE_FLOAT then
            v.value = "1000"
            v.freeze = true
            v.name = 'Grinder'
        end
    end
    gg.addListItems(t)
    t = nil
    gg.clearResults()
    gg.toast('Grinder ✅')
end

function LSN2SB()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber("64.0;34.09999847412;34.09999847412;35.0;36.0;74.0;74.0;34.0;74.0;36.0:41", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    gg.refineNumber("35;74", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    revert = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
    local t = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
    for i, v in ipairs(t) do
        if v.flags == gg.TYPE_FLOAT then
            v.value = "500034.59375"
            v.freeze = true
            v.name = 'LSN-2SB'
        end
    end
    gg.addListItems(t)
    t = nil
    gg.clearResults()
    gg.toast('LSN-2SB ✅')
end

function Whisperer()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber("95034.0;34.84999847412;234.0;134.0;114.0;104.0;154.0:141", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    gg.refineNumber("34.84999847412", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    revert = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
    local t = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
    for i, v in ipairs(t) do
        if v.flags == gg.TYPE_FLOAT then
            v.value = "36.4"
            v.freeze = true
            v.name = 'Whisperer'
        end
    end
    gg.addListItems(t)
    t = nil
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber("41.0;35.0;62.0;49.0;49.0:17", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    gg.refineNumber("49", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    revert = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
    local t = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
        for i, v in ipairs(t) do
        if v.flags == gg.TYPE_FLOAT then
            v.value = "10000"
            v.freeze = true
            v.name = 'Whisperer'
        end
    end
    gg.addListItems(t)
    t = nil
    gg.clearResults()
    gg.toast('Whisperer ✅')
end

function Vice()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber("35.0;49.0;54.0:9", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    gg.processResume()
    gg.refineNumber("54", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    revert = gg.getResults(50, nil, nil, nil, nil, nil, nil, nil, nil)
    local t = gg.getResults(50, nil, nil, nil, nil, nil, nil, nil, nil)
    for i, v in ipairs(t) do
        if v.flags == gg.TYPE_FLOAT then
            v.value = "10000"
            v.freeze = true
            v.name = 'Vice'
        end
    end
    gg.addListItems(t)
    t = nil
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber("50034.0;130.0;35.0:9", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    gg.refineNumber("35", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    revert = gg.getResults(50, nil, nil, nil, nil, nil, nil, nil, nil)
    gg.editAll("35.9", gg.TYPE_FLOAT)
    revert = gg.getResults(50, nil, nil, nil, nil, nil, nil, nil, nil)
    local t = gg.getResults(50, nil, nil, nil, nil, nil, nil, nil, nil)
    for i, v in ipairs(t) do
        if v.flags == gg.TYPE_FLOAT then
            v.value = "35.90000152588"
            v.freeze = true
            v.name = 'Vice'
        end
    end
    gg.addListItems(t)
    t = nil
    gg.clearResults()
    gg.toast('Vice ✅')
end

function RCF08()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber("36.0;50.0;41.0:21", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    gg.refineNumber("36", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    revert = gg.getResults(999, nil, nil, nil, nil, nil, nil, nil, nil)
    local t = gg.getResults(999, nil, nil, nil, nil, nil, nil, nil, nil)
    for i, v in ipairs(t) do
        if v.flags == gg.TYPE_FLOAT then
            v.value = "1000"
            v.freeze = true
            v.name = 'R.C.F.08'
        end
    end
    gg.addListItems(t)
    t = nil
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber("95034.0;36.5:9", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    gg.refineNumber("36.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    revert = gg.getResults(999, nil, nil, nil, nil, nil, nil, nil, nil)
    local t = gg.getResults(999, nil, nil, nil, nil, nil, nil, nil, nil)
    for i, v in ipairs(t) do
        if v.flags == gg.TYPE_FLOAT then
            v.value = "37.5"
            v.freeze = true
            v.name = 'R.C.F.08'
        end
    end
    gg.addListItems(t)
    t = nil
    gg.clearResults()
    gg.toast('R.C.F.08 ✅')
end

function VLI35()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber("34.09999847412;35.0;69.0;64.0;34.0;98.0;43.0;57.0;34.95000076294:41", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    gg.refineNumber("35;64", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    revert = gg.getResults(500, nil, nil, nil, nil, nil, nil, nil, nil)
    local t = gg.getResults(500, nil, nil, nil, nil, nil, nil, nil, nil)
    for i, v in ipairs(t) do
        if v.flags == gg.TYPE_FLOAT then
            v.value = "10000"
            v.freeze = true
            v.name = 'V.L.I.-35'
        end
    end
    gg.addListItems(t)
    t = nil
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber("95034.0;84.0;36.20000076294;40.0:13", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    gg.refineNumber("36.20000076294", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
    revert = gg.getResults(500, nil, nil, nil, nil, nil, nil, nil, nil)
    local t = gg.getResults(500, nil, nil, nil, nil, nil, nil, nil, nil)
    for i, v in ipairs(t) do
        if v.flags == gg.TYPE_FLOAT then
            v.value = "36.8"
            v.freeze = true
            v.name = 'V.L.I.-35'
        end
    end
    gg.addListItems(t)
    t = nil
    gg.clearResults()
    gg.toast('V.L.I.-35 ✅')
end

function HairTrigger()
    gg.setRanges(gg.REGION_OTHER)
    gg.searchNumber("36.0;38.0;40.0;42.0;44.0:97", gg.TYPE_FLOAT)
    revert = gg.getResults(100000)
    local t = gg.getResults(100000)
    for i, v in ipairs(t) do
        if v.flags == gg.TYPE_FLOAT then
            v.value = "134"
            v.freeze = true
            v.name = 'Hair Trigger'
        end
    end
    gg.addListItems(t)
    t = nil
    gg.clearResults()
end

function Exit()
    gg.skipRestoreState()
    os.exit()
    gg.setVisible(true)
end

function HOME()
    kele0=1
    Main()
end

while(true)do
if gg.isVisible(true) then
    XGCK=1
    gg.setVisible(false)
    end
gg.clearResults()
if XGCK==1 then
    Main()
    end
end
